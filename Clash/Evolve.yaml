mode: rule            # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info       # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）

mixed-port: 7890      # 混合端口，HTTP和SOCKS5用一个端口
allow-lan: true       # 允许局域网的连接（共享代理）
ipv6: true            # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
bind-address: "*"     # 监听IP白名单，可绑定单个IPv4和v6地址，"*" 为绑定所有IP地址，仅在将allow-lan设置为true时适用

unified-delay: true                # 统一延迟，更换延迟计算方式，去除握手等额外延迟
tcp-concurrent: false               #【Meta专属】TCP 并发连接所有 IP, 将使用最快握手的 TCP

external-controller: 127.0.0.1:53345   # 外部控制器监听地址，可以使用 RESTful API 来控制你的 clash 内核

geodata-mode: true                  #【Meta专属】使用geoip.dat数据库(默认：false使用mmdb数据库)
geox-url:                           # 自定义 geodata url, 需要有代理的前提才能下载geoip和geosite
  geoip: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"

find-process-mode: strict           # 匹配所有进程（always/strict/off）
global-client-fingerprint: chrome   # 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
                                    # 可选： "chrome","firefox","safari","ios","random","none" options.

profile:
  store-selected: true              # 存储 select 选择记录
  store-fake-ip: true               # 持久化 fake-ip

sniffer:                            # 嗅探域名 可选配置
  enable: true
  parse-pure-ip: true               # 是否使用嗅探结果作为实际访问，默认 true
  sniff:
    TLS:                            # TLS 默认嗅探 443
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
  force-domain:                     # 强制对此域名进行嗅探
    - "+.netflix.com"
    - "+.nflxvideo.net"
    - "+.amazonaws.com"
    - "+.media.dssott.com"
    - 'google.com'
  sniffing:                         # 需要嗅探协议
    - tls
    - http

tun:                                # Tun 配置
  enable: true
  stack: gvisor                     # 可选： system/gvisor/lwip
                                    # tun模式堆栈,如无使用问题,建议使用 system 栈;
                                    # MacOS 用户推荐 gvisor栈,IOS无法使用system栈
  dns-hijack:                       # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
    - 'any:53'
  strict_route: true                # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  auto-route: true                  # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-detect-interface: true       # 自动识别出口网卡

dns:
  enable: true             # 关闭将使用系统 DNS
  ipv6: true               # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip   # 模式：redir-host或fake-ip
  listen: 0.0.0.0:53       # DNS 监听地址
  default-nameserver: [223.5.5.5, 119.29.29.29]
                                  # 解析非IP的dns用的dns服务器，只支持纯IP，（Meta可为其加密）
  nameserver: [tls://8.8.4.4#dns, tls://1.0.0.1#dns]
                                  # 默认DNS服务器，支持udp/tcp/dot/doh/doq
  proxy-server-nameserver: [https://dns.alidns.com/dns-query, https://doh.pub/dns-query]
                                  # 代理DNS服务器，支持udp/tcp/dot/doh/doq
  nameserver-policy:
    "geosite:cn,private": [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
    "*.msftncsi.com": [https://dns.alidns.com/dns-query]
    "*.msftconnecttest.com": [https://dns.alidns.com/dns-query]

  fake-ip-range: 198.18.0.1/16    # Fake-IP 解析地址池
  fake-ip-filter: ['+.lan', 'localhost.ptlogin2.qq.com', 'lens.l.google.com', '+.srv.nintendo.net', '+.stun.playstation.net', '+.msftncsi.com', '+.xboxlive.com', 'msftconnecttest.com', 'xbox.*.*.microsoft.com', 'xbox.*.microsoft.com', '+.msftconnecttest.com', '*.msftncsi.com', '*.msftconnecttest.com']
                                  # Fake-ip 过滤，列表中的域名返回真实IP

###锚点###

# 规则行为相关
c: &c {type: http, behavior: classical, interval: 86400}

d: &d {type: http, behavior: domain, interval: 86400}

# 远程订阅相关
p: &p {type: http, interval: 42300, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}}

# 代理组相关
g: &g {type: select, proxies: [Proxy, Auto, Balance, Fallback, HongKong, TaiWan, Singapore, Japan, America, Others, DIRECT]}

m: &m {type: select, proxies: [DIRECT, Proxy, Auto, Balance, Fallback, HongKong, TaiWan, Singapore, Japan, America, Others]}

proxies:   # 本地服务器
# none

# 订阅引用相关
u: &u {type: select, use: [Subscribe]}

proxy-providers: # 远程订阅
  Subscribe: {<<: *p, path: ./proxy_providers/subscribe.yaml, url: ""}
# 请使用Clash类型订阅链接填入引号""内使用

proxy-groups:    # 代理组

# 漏网之鱼
 - {name: Final, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Final.png, <<: *g, proxies: [Proxy,DIRECT]}

# 节点切换
 - {name: Proxy, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Rocket.png, <<: *g, proxies: [Auto,Balance,Fallback,HongKong,TaiWan,Singapore,Japan,America,Others]}

# 国内网站
 - {name: Mainland, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/China_Map.png, <<: *m}

# 人工智能
 - {name: OpenAI, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Bot.png, <<: *g, proxies: [America,Japan,Singapore,TaiWan,Others]}

# 油管视频
 - {name: YouTube, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/YouTube.png, <<: *g}

# 奈飞影视
 - {name: NETFLIX, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Netflix.png, <<: *g}

# 迪士尼+
 - {name: Disney+, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Disney%2B.png, <<: *g}

# 哔哩哔哩
 - {name: BiliBili, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/bilibili.png, <<: *m, proxies: [DIRECT,HongKong,TaiWan]}

# 国际媒体
 - {name: Streaming, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Streaming.png, <<: *g}

# 电报信息
 - {name: Telegram, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Telegram_X.png, <<: *g}

# 谷歌服务
 - {name: Google, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Google.png, <<: *g}

# 游戏平台
 - {name: Games, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Game.png, <<: *g}

# 自动选择
 - {name: Auto, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Auto.png, type: url-test, lazy: true, <<: *u}

# 负载均衡
 - {name: Balance, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Bypass.png, type: load-balance, <<: *u}

# 故障转移
 - {name: Fallback, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Available.png, type: fallback, <<: *u}

# 香港节点
 - {name: HongKong, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Hong_Kong.png, type: url-test, lazy: true, <<: *u, filter: "港|🇭🇰|HK|(?i)Hong"}

# 台湾节点
 - {name: TaiWan, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Taiwan.png, type: url-test, lazy: true, <<: *u, filter: "台|🇨🇳|🇹🇼|湾|TW|(?i)Taiwan"}

# 狮城节点
 - {name: Singapore, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Singapore.png, type: url-test, lazy: true, <<: *u, filter: "新加坡|坡|狮城|🇸🇬|SG|(?i)Singapore"}

# 日本节点
 - {name: Japan, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Japan.png, type: url-test, lazy: true, <<: *u, filter: "日|🇯🇵|东京|JP|(?i)Japan"}

# 美国节点
 - {name: America, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/United_States.png, type: url-test, lazy: true, <<: *u, filter: "美|🇺🇲|US|(?i)States|American"}

# 其他节点
 - {name: Others, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Airport.png, type: url-test, lazy: true, <<: *u, filter: "^((?!香港|HK|Hong Kong|台湾|TW|TaiWan|新加坡|SG|Singapore|狮城|日本|JP|Japan|美国|US|States|American|Music)).*$"}

rule-providers: # 远程规则集
# none

rules: # 分流规则引用
  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOIP,CN))),REJECT # quic
  - GEOSITE,category-ads-all,REJECT
  - GEOSITE,private,DIRECT
  - GEOIP,private,DIRECT,no-resolve
  - GEOSITE,openai,OpenAI
  - GEOSITE,category-games,Games
  - GEOSITE,github,Proxy
  - GEOSITE,microsoft@cn,DIRECT
  - GEOSITE,youtube,YouTube
  - GEOSITE,telegram,Telegram
  - GEOIP,telegram,Telegram,,no-resolve
  - GEOSITE,disney,Disney+
  - GEOSITE,netflix,NETFLIX
  - GEOIP,netflix,NETFLIX,,no-resolve
  - GEOSITE,hbo,Streaming
  - GEOSITE,primevideo,Streaming
  - GEOSITE,bilibili,BiliBili
  - GEOSITE,bahamut,TaiWan
  - GEOSITE,google,Google
  - GEOIP,google,Google,,no-resolve
  - GEOSITE,geolocation-!cn,Final
  - GEOSITE,CN,Mainland
  - GEOIP,CN,Mainland,,no-resolve
  - MATCH,Final
